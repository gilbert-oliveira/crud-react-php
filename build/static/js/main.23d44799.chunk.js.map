{"version":3,"sources":["services/api.js","components/users/TableUsers.jsx","components/Main.jsx","components/NavBar.jsx","reportWebVitals.js","index.jsx"],"names":["api","axios","create","baseURL","TableUsers","useState","usuarios","setUsuarios","getUsers","a","get","then","data","useEffect","formCadUserValues","setFormCadUserValues","formEditUserValues","setFormEditUserValues","handleInputChangeCad","e","target","name","value","handleSubmitCadUser","preventDefault","formData","FormData","Object","fromEntries","createUser","handleInputChangeEdit","handleSubmitEditUser","id","updateUser","post","patch","deleteUser","delete","Card","CardHeader","tag","Row","Col","xs","type","className","data-bs-toggle","data-bs-target","CardBody","Table","hover","scope","length","map","usuario","nome","email","onClick","senha","newsenha","colSpan","tabindex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","onSubmit","FormGroup","Label","for","Input","onChange","confirmarSenha","Form","autoComplete","Main","Component","NavBar","props","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavbarText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.23d44799.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://binarioscode.cf/api_loja/actions/usuarios/api.php'\n})\n\nexport default api","import React, { useState, useEffect } from 'react';\nimport { Table, Card, CardHeader, CardBody, Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport api from '../../services/api.js'\n\nexport default function TableUsers() {\n\n  const [usuarios, setUsuarios] = useState({})\n\n  // Busca atravez de requisição GET.\n  var getUsers = async () => {\n    let data = await api.get('/').then(({ data }) => data);\n    await setUsuarios(data)\n  }\n\n  useEffect(() => {\n    getUsers();\n  }, [])\n\n  const [formCadUserValues, setFormCadUserValues] = useState({})\n  const [formEditUserValues, setFormEditUserValues] = useState({})\n\n  const handleInputChangeCad = (e) => {\n    let { name, value } = e.target;\n    setFormCadUserValues({ ...formCadUserValues, [name]: value })\n  }\n\n  const handleSubmitCadUser = async (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const data = Object.fromEntries(formData);\n    createUser(data);\n  }\n\n  const handleInputChangeEdit = (e) => {\n    const { name, value } = e.target;\n    setFormEditUserValues({ ...formEditUserValues, [name]: value })\n  }\n\n  const handleSubmitEditUser = async (e, id) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const data = Object.fromEntries(formData);\n    updateUser(data, formEditUserValues.id);\n  }\n\n  // Cadastra atravez de requisição POST.\n  const createUser = async (data) => {\n    await api.post('/', data)\n    setFormCadUserValues({})\n    await getUsers();\n  }\n\n  // Edita atravez de requisição POST\n  const updateUser = async (data, id) => {\n    await api.patch(`?id=${id}`, data)\n    await getUsers();\n  }\n\n  // Deleta atravez de requisição DELETE\n  const deleteUser = async (id) => {\n    await api.delete(`?id=${id}`)\n    getUsers();\n  }\n  return (\n    <>\n      <Card>\n        <CardHeader tag=\"h3\">\n          <Row>\n            <Col xs=\"9\" >Usuários cadastrados</Col>\n            <Col xs=\"3\">\n              <button type=\"button\" className=\"btn btn-primary w-100\" data-bs-toggle=\"modal\" data-bs-target=\"#cadUser\"><i className=\"fas fa-user-plus\">&nbsp; Cadastrar</i></button>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <Table hover>\n            <thead>\n              <tr>\n                {/* <th scope=\"col\">ID</th> */}\n                <th scope=\"col\">Nome</th>\n                <th scope=\"col\">E-mail</th>\n                <th scope=\"col\">Ações</th>\n              </tr>\n            </thead>\n            <tbody>\n\n              {usuarios.length > 0 ?\n                usuarios.map(usuario =>\n                  <tr>\n                    {/* <th key={usuario.id}>{usuario.id}</th> */}\n                    <th>{usuario.nome}</th>\n                    <th>{usuario.email}</th>\n                    <th>\n                      <button onClick={() => setFormEditUserValues({ nome: usuario.nome, email: usuario.email, id: usuario.id, senha: '', newsenha: '' })} data-bs-toggle=\"modal\" data-bs-target=\"#editUser\" className=\" mx-1 btn btn-success\"><i className=\"fas fa-user-edit\"></i></button>\n                      <button className=\" mx-1 btn btn-danger\" onClick={() => deleteUser(usuario.id)}><i className=\"fas fa-user-times\"></i></button>\n                    </th>\n                  </tr>) :\n                <tr>\n                  <td colSpan=\"4\" className=\"text-center\">\n                    <b>Nenhum usuário encontrado</b>\n                  </td>\n                </tr>}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n\n      {/* Modal cadUser */}\n      <div className=\"modal fade\" id=\"cadUser\" tabindex=\"-1\" aria-labelledby=\"cadUserLabel\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"cadUserLabel\">Cadastrar Usuário</h5>\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div className=\"modal-body\">\n              <form onSubmit={handleSubmitCadUser} id=\"formCad\">\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                  <Label for=\"nomeCad\" className=\"mr-sm-2\">Nome</Label>\n                  <Input type=\"text\" name=\"nome\" id=\"nomeCad\" onChange={handleInputChangeCad} value={formCadUserValues.nome || ''} />\n                </FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                  <Label for=\"emailCad\" className=\"mr-sm-2\">E-mail</Label>\n                  <Input type=\"email\" name=\"email\" id=\"emailCad\" onChange={handleInputChangeCad} value={formCadUserValues.email || ''} />\n                </FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                  <Label for=\"senhaCad\" className=\"mr-sm-2\">Senha</Label>\n                  <Input type=\"password\" name=\"senha\" id=\"senhaCad\" onChange={handleInputChangeCad} value={formCadUserValues.senha || ''} />\n                </FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                  <Label for=\"confirmarSenhaCad\" className=\"mr-sm-2\">Confirme sua senha</Label>\n                  <Input type=\"password\" name=\"confirmarSenha\" id=\"confirmarSenhaCad\" onChange={handleInputChangeCad} value={formCadUserValues.confirmarSenha || ''} />\n                </FormGroup>\n                <FormGroup className=\"mt-2 text-end\">\n                  <button type=\"submit\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">Cadastrar</button>\n                </FormGroup>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Modal editUser */}\n      <div className=\"modal fade\" id=\"editUser\" tabindex=\"-1\" aria-labelledby=\"editUserLabel\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"editUserLabel\">Editar Usuário</h5>\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div className=\"modal-body\">\n              <Form onSubmit={handleSubmitEditUser} id=\"formEdit\">\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                  <Label for=\"nome\" className=\"mr-sm-2\">Nome</Label>\n                  <Input type=\"text\" name=\"nome\" id=\"nome\" onChange={handleInputChangeEdit} value={formEditUserValues.nome} autoComplete=\"off\"/>\n                </FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                  <Label for=\"email\" className=\"mr-sm-2\">E-mail</Label>\n                  <Input type=\"email\" name=\"email\" id=\"email\" onChange={handleInputChangeEdit} value={formEditUserValues.email} autoComplete=\"off\"/>\n                </FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                  <Label for=\"senha\" className=\"mr-sm-2\">Nova Senha</Label>\n                  <Input type=\"password\" name=\"senha\" id=\"senha\" onChange={handleInputChangeEdit} value={formEditUserValues.senha} autoComplete=\"off\"/>\n                </FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                  <Label for=\"novaSenha\" className=\"mr-sm-2\">Confirme sua senha</Label>\n                  <Input type=\"password\" name=\"newsenha\" id=\"newsenha\" onChange={handleInputChangeEdit} value={formEditUserValues.newsenha} autoComplete=\"off\"/>\n                </FormGroup>\n                <FormGroup className=\"mt-2 text-end\">\n                  <button type=\"submit\" onClick={handleInputChangeEdit} className=\"btn btn-primary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">Editar</button>\n                </FormGroup>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}","// import './App.css';\nimport TableUsers from './users/TableUsers';\nimport React, { Component } from 'react';\n\nclass Main extends Component {\n  render() {\n    return (\n      <div className=\"Main container\">\n        <TableUsers />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\n\nconst NavBar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar className=\"px-3\" color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">reactstrap</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/components/\">Components</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Options\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>\n                  Reset\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          <NavbarText>Simple Text</NavbarText>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './components/Main';\nimport Nav from './components/NavBar';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.Fragment>\n    <Nav />\n    <Main />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}